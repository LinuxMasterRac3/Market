substitutions:
  _USERNAME: "default_user" # Replace with your default username or set via build trigger
  _VM_INSTANCE: "instance-20241228-143729" # Updated VM instance name
  _VM_ZONE: "us-central1-b" # Replace with your VM zone or set via build trigger
  _VM_PATH: "/home/default_user/app" # Replace with your desired path on VM or set via build trigger
  _INSTANCE_CONNECTION_NAME: "your-project:us-central1:instance-20241228-143729" # Ensure this is correct
  _VPC_CONNECTOR: "projects/${PROJECT_ID}/locations/us-central1/connectors/cloud-run-vpc-connector" # Name of the VPC connector
  _DB_HOST: "${SUPABASE_DB_HOST}" # Updated to reference environment variable
  _DB_PORT: "5432"
  _DB_USER: "${SUPABASE_DB_USER}" # Updated to reference environment variable
  _DB_NAME: "${SUPABASE_DB_NAME}" # Updated to reference environment variable
  # Remove hardcoded DB_PASSWORD and use secrets

steps:
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/$PROJECT_ID/gestionale:$COMMIT_SHA", "."]

  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/gestionale:$COMMIT_SHA"]

  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "run"
      - "deploy"
      - "provadelsito"
      - "--image=gcr.io/$PROJECT_ID/gestionale:$COMMIT_SHA" # Replaced <tuo_progetto>/<nome_container> with $PROJECT_ID/gestionale
      - "--region=us-central1" # Replaced <regione> with us-central1
      - "--platform=managed"
      - "--allow-unauthenticated"
      - "--port=8080" # Ensure port is set to 8080
      - "--memory=512Mi"
      - "--timeout=900s" # Increased to 15 minutes
      - "--set-env-vars"
      - "PORT=8080,DB_HOST=${_DB_HOST},DB_PORT=${_DB_PORT},DB_USER=${_DB_USER},DB_NAME=${_DB_NAME}"
      - "--set-secrets"
      - "DB_PASSWORD=projects/${PROJECT_ID}/secrets/supabase-db-password/versions/latest"
      - "--min-instances=1"

  # Add firewall rule to allow TCP traffic on port 8080
  - name: "gcr.io/cloud-builders/gcloud"
    args:
      - "compute"
      - "firewall-rules"
      - "create"
      - "allow-8080"
      - "--allow=tcp:8080"
      - "--target-tags=allow-8080"
      - "--description=Allow incoming traffic on port 8080 for web application"
      - "--network=default"

  # Add firewall rule to allow TCP traffic from VPC Connector to PostgreSQL on port 5432
  - name: "gcr.io/cloud-builders/gcloud"
    args:
      - "compute"
      - "firewall-rules"
      - "create"
      - "allow-db-traffic"
      - "--allow=tcp:5432"
      - "--source-ranges=10.8.0.0/28" # IP range of the VPC Connector
      - "--target-tags=allow-5432"
      - "--description=Allow DB traffic from VPC Connector on port 5432"
      - "--network=default"

  # Update firewall rules for VPC access
  - name: "gcr.io/cloud-builders/gcloud"
    args:
      - "compute"
      - "firewall-rules"
      - "create"
      - "allow-postgres-vpc"
      - "--network=default"
      - "--allow=tcp:5432"
      - "--source-ranges=10.128.0.0/20"
      - "--target-tags=postgres-server"
      - "--description=Allow PostgreSQL access from VPC"

  # Assign tags to the VM instance
  - name: "gcr.io/cloud-builders/gcloud"
    args:
      - "compute"
      - "instances"
      - "add-tags"
      - "$_VM_INSTANCE"
      - "--tags=allow-8080,allow-5432" # Removed allow-8081
      - "--zone=$_VM_ZONE"

images:
  - "gcr.io/$PROJECT_ID/gestionale:$COMMIT_SHA"
